@model Qconcert.ViewModels.RevenueStatisticsViewModel
@{
    ViewData["Title"] = "Thống kê doanh thu quảng cáo";
}

<div class="container mt-5">
    <h2 class="mb-4">Thống Kê Doanh Thu Quảng Cáo</h2>

    <div class="row mb-4">
        <div class="col-md-12">
            <form method="get" action="@Url.Action("RevenueStatistics", "Promotion")">
                <button type="submit" name="period" value="day" class="btn btn-outline-primary @(Model.Period == "day" ? "active" : "")">Hôm nay</button>
                <button type="submit" name="period" value="week" class="btn btn-outline-primary @(Model.Period == "week" ? "active" : "")">Tuần này</button>
                <button type="submit" name="period" value="month" class="btn btn-outline-primary @(Model.Period == "month" ? "active" : "")">Tháng này</button>
                <button type="submit" name="period" value="quarter" class="btn btn-outline-primary @(Model.Period == "quarter" ? "active" : "")">Quý này</button>
                <button type="submit" name="period" value="year" class="btn btn-outline-primary @(Model.Period == "year" ? "active" : "")">Năm nay</button>
            </form>
        </div>
    </div>

    <!-- 3 hộp thống kê -->
    <div class="row">
        <div class="col-md-4">
            <div class="card text-center">
                <div class="card-header bg-primary text-white">
                    <h4>Doanh Thu VIP</h4>
                </div>
                <div class="card-body">
                    <h5 class="card-title text-success">
                        @String.Format(new System.Globalization.CultureInfo("vi-VN"), "{0:C0}", Model.VipRevenue)
                    </h5>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card text-center">
                <div class="card-header bg-info text-white">
                    <h4>Doanh Thu Thường</h4>
                </div>
                <div class="card-body">
                    <h5 class="card-title text-success">
                        @String.Format(new System.Globalization.CultureInfo("vi-VN"), "{0:C0}", Model.NormalRevenue)
                    </h5>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card text-center">
                <div class="card-header bg-success text-white">
                    <h4>Tổng Doanh Thu</h4>
                </div>
                <div class="card-body">
                    <h5 class="card-title text-success">
                        @String.Format(new System.Globalization.CultureInfo("vi-VN"), "{0:C0}", Model.TotalRevenue)
                    </h5>
                </div>
            </div>
        </div>
    </div>

    <!-- Biểu đồ doanh thu -->
    <div class="row mt-5">
        <div class="col-md-12">
            <h3 class="mb-3">Biểu đồ Doanh Thu</h3>
            <canvas id="revenueChart" height="100"></canvas>
        </div>
    </div>

    <!-- Ghi chú -->
    <div class="row mt-4">
        <div class="col-md-12 text-center">
            <p>Thống kê từ <strong>@Model.StartDate.ToString("dd/MM/yyyy")</strong> đến <strong>@Model.EndDate.ToString("dd/MM/yyyy")</strong>.</p>
        </div>
    </div>
</div>

<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const ctx = document.getElementById('revenueChart').getContext('2d');
        let chart;

        function loadChart() {
            const period = "@Model.Period";

            fetch(`/api/statistics/ad-revenue?period=${period}`)
                .then(res => res.json())
                .then(data => {
                    const labels = data.dailyRevenue.map(d => d.time);
                    const vipRevenue = data.dailyRevenue.map(d => d.vipRevenue);
                    const normalRevenue = data.dailyRevenue.map(d => d.normalRevenue);
                    const totalRevenue = data.dailyRevenue.map(d => d.totalRevenue);

                    if (chart) chart.destroy();

                    chart = new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: labels,
                            datasets: [
                                {
                                    label: 'Doanh thu VIP (VNĐ)',
                                    data: vipRevenue,
                                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                                    borderColor: 'rgba(255, 99, 132, 1)',
                                    borderWidth: 2,
                                    fill: true,
                                    tension: 0.3
                                },
                                {
                                    label: 'Doanh thu Thường (VNĐ)',
                                    data: normalRevenue,
                                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                                    borderColor: 'rgba(54, 162, 235, 1)',
                                    borderWidth: 2,
                                    fill: true,
                                    tension: 0.3
                                },
                                {
                                    label: 'Tổng doanh thu (VNĐ)',
                                    data: totalRevenue,
                                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                                    borderColor: 'rgba(75, 192, 192, 1)',
                                    borderWidth: 2,
                                    fill: true,
                                    tension: 0.3
                                }
                            ]
                        },
                        options: {
                            responsive: true,
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    ticks: {
                                        callback: value => value.toLocaleString('vi-VN') + ' đ'
                                    }
                                }
                            },
                            plugins: {
                                tooltip: {
                                    callbacks: {
                                        label: ctx => ctx.raw.toLocaleString('vi-VN') + ' đ'
                                    }
                                }
                            }
                        }
                    });
                })
                .catch(err => {
                    console.error('Lỗi tải biểu đồ doanh thu:', err);
                });
        }

        loadChart();
    });
</script>
